language: cpp

cache:
  apt: true
  ccache: true
  directories:
    - /home/travis/.conan/
    - packages
    - tools


branches:
  except:
    - /.*pp.eyor.*/


services:
#  - mongodb
#  - redis-server
#  - postgresql
#  - mysql

addons:
#  postgresql: "9.3"

env:
  global: 
    TEST_NAME=""

before_install:
  # we need a recent version of CMake
  # - sudo add-apt-repository -y ppa:andykimpe/cmake3
  # linux prereqisite packages
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq; fi
  - chmod 777 $TRAVIS_BUILD_DIR/build/linux/deploy_tools.sh
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo $TRAVIS_BUILD_DIR/build/linux/deploy_tools.sh; fi 
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq; fi
  - eval "${MATRIX_EVAL}"

before_script:
# - echo ${TEST_NAME}
# - chmod 755 ./travis/Linux/runtests.sh
# - chmod 755 ./travis/OSX/runtests.sh
# - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mysql -u root -e 'create database pocotestdb;'; fi
# - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mysql --version; fi
# - if [ "$TRAVIS_OS_NAME" == "linux" ]; then postgres --version; fi
# - sqlite3 -version
  - chmod 777 $TRAVIS_BUILD_DIR/build/linux/genproj.sh
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo $TRAVIS_BUILD_DIR/build/linux/genproj.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo make -f generators.make help; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo ls packages; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo find tools; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo gcc-7 --version; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo g++-7 --version; fi

matrix:
  fast_finish: true

  include:
    - env:
        - TEST_NAME="Linux GCC 7 Debug Static"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      compiler: gcc
      os: linux
      addons:
        apt:
            sources:
              - ubuntu-toolchain-r-test
            packages:
              - g++-7
      script:
        - sudo make -f generators.make configuration=debug-static_linux64-gcc verbose=1
        - sudo make -f trader.make     configuration=debug-static_linux64-gcc verbose=1

    # - env:    TEST_NAME="Linux GCC Debug Shared"
      # compiler: gcc
      # script:
        # - make -f generators.make configuration=Linux64-gcc_debug-shared verbose=1
        # - make -f trader.make     configuration=Linux64-gcc_debug-shared verbose=1

    # - env:    TEST_NAME="Linux GCC Release Static"
      # compiler: gcc
      # script:
        # - make -f generators.make configuration=Linux64-gcc_release-static verbose=1
        # - make -f trader.make     configuration=Linux64-gcc_release-static verbose=1

    # - env:    TEST_NAME="Linux GCC Release Shared"
      # compiler: gcc
      # script:
        # - make -f generators.make configuration=Linux64-gcc_release-shared verbose=1
        # - make -f trader.make     configuration=Linux64-gcc_release-shared verbose=1

    # - env:    TEST_NAME="Linux Clang Debug Static"
      # compiler: clang
      # script:
        # - make -f generators.make configuration=Linux64-clang_debug-static verbose=1
        # - make -f trader.make     configuration=Linux64-clang_debug-static verbose=1

    # - env:    TEST_NAME="Linux Clang Debug Shared"
      # compiler: clang
      # script:
        # - make -f generators.make configuration=Linux64-clang_debug-shared verbose=1
        # - make -f trader.make     configuration=Linux64-clang_debug-shared verbose=1

    # - env:    TEST_NAME="Linux Clang Release Static"
      # compiler: clang
      # script:
        # - make -f generators.make configuration=Linux64-clang_release-static verbose=1
        # - make -f trader.make     configuration=Linux64-clang_release-static verbose=1

    # - env:    TEST_NAME="Linux Clang Release Shared"
      # compiler: clang
      # script:
        # - make -f generators.make configuration=Linux64-clang_release-shared verbose=1
        # - make -f trader.make     configuration=Linux64-clang_release-shared verbose=1

    # # QA jobs for code analytics and metrics
    # # build documentation and release
# #    - env:    TEST_NAME="Linux documentation & release"
# #      compiler: gcc
# #      script:
# #        - export CC="gcc"
# #        - export CXX="g++"
# #        - . env.sh && mkdoc all && mkrel all

    # # static code analysis with cppcheck (we can add --enable=all later)
    # - env:    TEST_NAME="cppcheck"
      # script: cppcheck --force --quiet --inline-suppr -j2 -ipackages -ideps -itools .
    # # search for TODO within source tree
    # - env:    TEST_NAME="TODO"
      # script: grep -r TODO *
    # # search for FIXME within source tree
    # - env:    TEST_NAME="FIXME"
      # script: grep -r FIXME *
    # # search for HACK within source tree
    # - env:    TEST_NAME="HACK"
      # script: grep -r HACK *
    # # some statistics about the code base
    # - env:    TEST_NAME="sloccount"
      # script: sloccount .
