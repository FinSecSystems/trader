language: cpp

cache:
  apt: true
  ccache: true
  directories:
    - /home/travis/.conan/
    - packages
    - tools

services:
    - docker

branches:
  except:
    - /.*pp.eyor.*/

env:
  global: 
    - TEST_NAME=""
  matrix:
    - TEST NAME="Linux GCC 7 Debug Static x64"
      CC_VER="7"
      PREMAKE_CONFIGUATION="debug-static"
      PREMAKE_COMPILER="linux64-gcc"

before_install:
  - chmod 777 $TRAVIS_BUILD_DIR/build/linux/deploy_tools.sh
  - chmod 777 $TRAVIS_BUILD_DIR/build/linux/setup_env.sh
  - chmod 777 $TRAVIS_BUILD_DIR/build/linux/genproj.sh
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker run -d --name ubuntu-test -v $TRAVIS_BUILD_DIR:/travis ubuntu:latest tail -f /dev/null; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker ps; fi 

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        docker exec -t ubuntu-test bash -c
        "
            export;
            cd /travis;
            pwd;
            ls -lah;
            apt-get update;
            . build/linux/setup_env.sh;
            build/linux/deploy_tools.sh;
            add-apt-repository -y ppa:ubuntu-toolchain-r/test;
            apt-get update;
            lsb_release -a;
        "
    ;fi

before_script:
  - echo ${TEST_NAME}
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        docker exec -t ubuntu-test bash -c
        "
            cd /travis;
            $TRAVIS_BUILD_DIR/build/linux/genproj.sh;
            make -f generators.make help;
            ls packages;
            find tools;
            $(CC) --version;
            $(CXX) --version;
            ld --version;
            ar --version;
        "
    ;fi

script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        docker exec -t ubuntu-test bash -c
        "
            cd /travis;
            make -f generators.make configuration=$PREMAKE_CONFIGUATION_$PREMAKE_COMPILER verbose=1
            make -f trader.make     configuration=$PREMAKE_CONFIGUATION_$PREMAKE_COMPILER verbose=1
        "
    ;fi

    # # static code analysis with cppcheck (we can add --enable=all later)
    # - env:    TEST_NAME="cppcheck"
      # script: cppcheck --force --quiet --inline-suppr -j2 -ipackages -ideps -itools .
    # # search for TODO within source tree
    # - env:    TEST_NAME="TODO"
      # script: grep -r TODO *
    # # search for FIXME within source tree
    # - env:    TEST_NAME="FIXME"
      # script: grep -r FIXME *
    # # search for HACK within source tree
    # - env:    TEST_NAME="HACK"
      # script: grep -r HACK *
    # # some statistics about the code base
    # - env:    TEST_NAME="sloccount"
      # script: sloccount .
