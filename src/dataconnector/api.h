///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// <copyright file="api.h" company="FinSec Systems">
// Copyright (c) 2018 finsec.systems. All rights reserved.
// </copyright>
// <author>Viknash</author>
// <date>12/5/2018</date>
// <summary>Declares the API class</summary>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

namespace trader
{

    class Api
    {
      public:
        /// <summary> Finalizes an instance of the API class. </summary>
        virtual ~Api(){};

        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary> Executes the given operation on a different thread, and waits for the result. </summary>
        ///
        /// <param name="httpMethod"> The HTTP method. </param>
        /// <param name="uri">		  [in,out] URI of the document. </param>
        ///
        /// <returns> A Poco::Dynamic::Var. </returns>
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual Poco::Dynamic::Var invoke(const std::string &httpMethod, Poco::URI &uri) = 0;

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Sets the parameters. </summary>
		///
		/// <param name="parameter1"> The first parameter. </param>
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void setParams(const std::string&) {}
    };
} // namespace trader
