{
  "definitions": {
    "ServerTime": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object",
          "properties": {
            "unixtime": {
              "type": "number"
            },
            "rfc1123": {
              "type": "string"
            }
          }
        }
      }
    },
    "AssetInfoParams": {
      "type": "object",
      "properties": {
        "info": {
          "description": "Info to retrieve - all info (default)",
          "type": "string"
        },
        "aclass": {
          "description": "Asset Class - currency (default)",
          "type": "string"
        },
        "asset": {
          "description": "Comma delimited list of assets to get info on (optional.  default = all for given asset class)",
          "type": "string"
        }
      },
      "required": [ ]
    },
    "AssetInfo": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "type": "object",
              "properties": {
                "aclass": {
                  "type": "string"
                },
                "altname": {
                  "type": "string"
                },
                "decimals": {
                  "type": "number"
                },
                "display_decimals": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "required": [ ]
    },
    "ErrorIntrospector": {
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssetPairsParams": {
      "type": "object",
      "properties": {
        "info": {
          "description": "info to retrieve (optional), info = all info (default), leverage = leverage info, fees = fees schedule, margin = margin info",
          "type": "string"
        },
        "pair": {
          "description": "comma delimited list of asset pairs to get info on (optional.  default = all)",
          "type": "string"
        }
      },
      "required": [ ]
    },
    "AssetPairs": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "type": "object",
              "properties": {
                "altname": {
                  "description": "alternate pair name",
                  "type": "string"
                },
                "aclass_base": {
                  "description": "asset class of base component",
                  "type": "string"
                },
                "base": {
                  "description": "asset id of base component",
                  "type": "string"
                },
                "aclass_quote": {
                  "description": "asset class of quote component",
                  "type": "string"
                },
                "quote": {
                  "description": "asset id of quote component",
                  "type": "string"
                },
                "lot": {
                  "description": "volume lot size",
                  "type": "string"
                },
                "pair_decimals": {
                  "description": "scaling decimal places for pair",
                  "type": "number"
                },
                "lot_decimals": {
                  "description": "scaling decimal places for volume",
                  "type": "number"
                },
                "lot_multiplier": {
                  "description": "amount to multiply lot volume by to get currency volume",
                  "type": "number"
                },
                "leverage_buy": {
                  "description": "array of leverage amounts available when buying",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "leverage_sell": {
                  "description": "array of leverage amounts available when selling",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "fees": {
                  "description": "fee schedule array in [volume, percent fee] tuples",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "fees_maker": {
                  "description": "maker fee schedule array in [volume, percent fee] tuples (if on maker/taker)",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "fee_volume_currency": {
                  "description": "volume discount currency",
                  "type": "string"
                },
                "margin_call": {
                  "description": "margin call level",
                  "type": "number"
                },
                "margin_stop": {
                  "description": "stop-out/liquidation margin level",
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "AccountBalance": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "format": "double",
              "type": "number"
            }
          }
        }
      }
    },
    "TickerInformationParams": {
      "type": "object",
      "properties": {
        "pair": {
          "description": "comma delimited list of asset pairs to get info on",
          "type": "string"
        }
      },
      "required": [ ]
    },
    "TickerInformation": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "type": "object",
              "properties": {
                "a": {
                  "description": "ask array(<price>, <whole lot volume>, <lot volume>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "b": {
                  "description": "bid array(<price>, <whole lot volume>, <lot volume>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "c": {
                  "description": "last trade closed array(<price>, <lot volume>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "v": {
                  "description": "volume array(<today>, <last 24 hours>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "p": {
                  "description": "volume weighted average price array(<today>, <last 24 hours>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "t": {
                  "description": "number of trades array(<today>, <last 24 hours>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "l": {
                  "description": "low array(<today>, <last 24 hours>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "h": {
                  "description": "high array(<today>, <last 24 hours>)",
                  "type": "array",
                  "items": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "o": {
                  "description": "today's opening price",
                  "format": "double",
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "OHLCDataParams": {
      "type": "object",
      "properties": {
        "since": {
          "description": "return committed OHLC data since given id (optional.  exclusive)",
          "format": "double",
          "type": "number"
        },
        "interval ": {
          "description": "time frame interval in minutes (optional): 1 (default), 5, 15, 30, 60, 240, 1440, 10080, 21600",
          "format": "double",
          "type": "number"
        },
        "pair": {
          "description": "asset pair to get OHLC data for",
          "type": "string"
        }
      },
      "required": [ "pair" ]
    },
    "OHLCData": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "description": "array of array entries(<time>, <open>, <high>, <low>, <close>, <vwap>, <volume>, <count>)",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "last": {
              "description": "id to be used as since when polling for new, committed OHLC data",
              "type": "number"
            }
          }
        }
      },
      "required": [ ]
    },
    "OrderBookParams": {
      "type": "object",
      "properties": {
        "count": {
          "description": "maximum number of asks/bids (optional)",
          "type": "number"
        },
        "pair": {
          "description": "asset pair to get OHLC data for",
          "type": "string"
        }
      },
      "required": [ "pair" ]
    },
    "OrderBook": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "type": "object",
              "properties": {
                "asks": {
                  "description": "ask side array of array entries(<price>, <volume>, <timestamp>)",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                },
                "bids": {
                  "description": "bid side array of array entries(<price>, <volume>, <timestamp>)",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "format": "double",
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [ ]
    },
    "RecentTradesParams": {
      "type": "object",
      "properties": {
        "since": {
          "description": "return trade data since given id (optional.  exclusive)",
          "type": "number"
        },
        "pair": {
          "description": "asset pair to get OHLC data for",
          "type": "string"
        }
      },
      "required": [ "pair" ]
    },
    "RecentTrades": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "description": "array of array entries(<price>, <volume>, <time>, <buy/sell>, <market/limit>, <miscellaneous>)",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "last": {
              "description": "id to be used as since when polling for new trade data",
              "type": "string"
            }
          }
        }
      },
      "required": [ ]
    },
    "RecentSpreadParams": {
      "type": "object",
      "properties": {
        "since": {
          "description": "return spread data since given id (optional.  inclusive)",
          "type": "number"
        },
        "pair": {
          "description": "",
          "type": "string"
        }
      },
      "required": [ "pair" ]
    },
    "RecentSpread": {
      "type": "object",
      "properties": {
        "result": {
          "type": "map",
          "properties": {
            "key": {
              "description": "array of array entries(<time>, <bid>, <ask>)",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "last": {
              "description": "id to be used as since when polling for new spread data",
              "type": "number"
            }
          }
        }
      },
      "required": [ ]
    },
    "StandardOrderParams": {
      "type": "object",
      "properties": {
        "type": {
          "description": "type of order (buy/sell)",
          "type": "string"
        },
        "pair": {
          "description": "asset pair",
          "type": "string"
        },
        "ordertype": {
          "description": "order type:\n market\n limit (price = limit price)\n stop-loss (price = stop loss price)\n take-profit (price = take profit price)\n stop-loss-profit (price = stop loss price, price2 = take profit price)\n stop-loss-profit-limit (price = stop loss price, price2 = take profit price)\n stop-loss-limit (price = stop loss trigger price, price2 = triggered limit price)\n take-profit-limit (price = take profit trigger price, price2 = triggered limit price)\n trailing-stop (price = trailing stop offset)\n trailing-stop-limit (price = trailing stop offset, price2 = triggered limit offset)\n stop-loss-and-limit (price = stop loss price, price2 = limit price)\n settle-position",
          "type": "string",
        },
        "price": {
          "description": "price (optional.  dependent upon ordertype)",
          "type": "string"
        },
        "price2": {
          "description": "secondary price (optional.  dependent upon ordertype)",
          "type": "string"
        },
        "volume": {
          "description": "order volume in lots",
          "format": "double",
          "type": "number"
        },
        "leverage": {
          "description": "order volume in lots",
          "format": "double",
          "type": "number"
        }
      },
      "required": [ "pair" ]
    }
  },
  "properties": {
    "type": "object",
    "required": []
  },
  "links": [
  {
      "href": "public/Time",
      "description": "Get server time",
      "method": "GET",
      "title": "GetServerTime",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/ServerTime"
        }
      ]
    },
    {
      "href": "public/Assets",
      "description": "Returns list of asset names and info",
      "method": "GET",
      "title": "GetAssetInfo",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/AssetInfo"
        }
      ],
      "schema": {
        "$ref": "#/definitions/AssetInfoParams"
      }
    },
    {
      "href": "public/AssetPairs",
      "description": "Get tradable asset pairs",
      "method": "GET",
      "title": "GetAssetPairs",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/AssetPairs"
        }
      ],
      "schema": {
        "$ref": "#/definitions/AssetPairsParams"
      }
    },
    {
      "href": "public/Ticker",
      "description": "Get Ticker Information - Note: Today's prices start at 00:00:00 UTC",
      "method": "GET",
      "title": "GetTickerInformation",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/TickerInformation"
        }
      ],
      "schema": {
        "$ref": "#/definitions/TickerInformationParams"
      }
    },
    {
      "href": "public/OHLC",
      "description": "Get OHLC data - Note: the last entry in the OHLC array is for the current, not-yet-committed frame and will always be present, regardless of the value of \"since\".",
      "method": "POST",
      "title": "GetOHLCData",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/OHLCData"
        }
      ],
      "schema": {
        "$ref": "#/definitions/OHLCDataParams"
      }
    },
    {
      "href": "private/Balance",
      "description": "array of asset names and balance amount",
      "method": "POST",
      "title": "GetAccountBalance",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/AccountBalance"
        }
      ]
    },
    {
      "href": "public/Depth",
      "description": "Get Order Book",
      "method": "POST",
      "title": "GetOrderBook",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/OrderBook"
        }
      ],
      "schema": {
        "$ref": "#/definitions/OrderBookParams"
      }
    },
    {
      "href": "public/Trades",
      "description": "Get Recent Trades",
      "method": "POST",
      "title": "GetRecentTrades",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/RecentTrades"
        }
      ],
      "schema": {
        "$ref": "#/definitions/RecentTradesParams"
      }
    },
    {
      "href": "public/Spread",
      "description": "Recent Spread Data",
      "method": "POST",
      "title": "GetRecentSpread",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/RecentSpread"
        }
      ],
      "schema": {
        "$ref": "#/definitions/RecentSpreadParams"
      }
    },
    {
      "href": "public/AddOrder",
      "description": "Add Standard Order",
      "method": "POST",
      "title": "AddStandardOrder",
      "rel": "create",
      "targetSchemas": [
        {
          "$ref": "#/definitions/StandardOrder"
        }
      ],
      "schema": {
        "$ref": "#/definitions/StandardOrderParams"
      }
    }
  ],
  "config": {
    "baseurl": "https://api.kraken.com/0/",
    "useConfig": true
  },
  "required": [],
  "type": "object"
}