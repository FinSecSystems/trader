///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// <copyright file="applicationhelper.h" company="MyCompany.com">
// Copyright (c) 2018 MyCompany.com. All rights reserved.
// </copyright>
// <author>Viknash</author>
// <date>29/4/2018</date>
// <summary>Declares the applicationhelper class</summary>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

#include "app.h"


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// namespace: trader
//
// summary:	.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace trader
{

    /// <summary> An application helper. </summary>
    class ApplicationHelper : public App
    {
      public:
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary> Searches for the first file. </summary>
        ///
        /// <param name="path"> [in,out] Full pathname of the file. </param>
        ///
        /// <returns> True if it succeeds, false if it fails. </returns>
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        bool findFile(Poco::Path &path) const override;

        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary> Application configuration. </summary>
        ///
        /// <returns> A reference to a Poco::Util::AbstractConfiguration. </returns>
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        Poco::Util::AbstractConfiguration &appConfig();
        ThreadPool pool;	///< The pool

		/// <summary> A sample application tests setup application test. </summary>
		friend class SampleAppTests_SetupApp_Test;
		/// <summary> A sample application tests start application test. </summary>
		friend class SampleAppTests_StartApp_Test;
        /// <summary> A sample application tests run application test. </summary>
        friend class SampleAppTests_RunApp_Test;

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Setups the given p application. </summary>
		///
		/// <param name="pApp"> The application. </param>
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		friend void setup(Poco::AutoPtr<trader::ApplicationHelper> pApp);

      protected:
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary> Define options. </summary>
        ///
        /// <param name="options"> [in,out] Options for controlling the operation. </param>
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void defineOptions(Poco::Util::OptionSet &options);

        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary> Handles the help. </summary>
        ///
        /// <param name="name">  The name. </param>
        /// <param name="value"> The value. </param>
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void handleHelp(const std::string &name, const std::string &value);
        /// <summary> Displays a help. </summary>
        void displayHelp();
        /// <summary> Setups this object. </summary>
        void setup();
        /// <summary> Starts this object. </summary>
        void start();
		/// <summary> Destroys this object. </summary>
		void destroy();


	};

} // namespace trader
